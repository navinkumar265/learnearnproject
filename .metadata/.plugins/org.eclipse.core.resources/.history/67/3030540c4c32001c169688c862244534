package com.learnearn.repository;

import java.time.LocalDateTime;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.jpa.repository.support.JpaRepositoryFactory;
import org.springframework.stereotype.Repository;

import com.learnearn.model.PostAvailability;
import com.learnearn.model.PostStatus;
import com.learnearn.model.Trainer;

@Repository
public interface ITrainerRepository extends JpaRepository<Trainer, Integer> {
	Trainer getById(int trainerId);

	List<Trainer> findByAvailability(PostAvailability availability);

	List<Trainer> findByTrainerName(String TrainerName);

	@Query("from Trainer t inner join t.course cs where cs.courseName= ?1 and t.trainerName= ?2")
	List<Trainer> findByCourseNameAndTrainerName(String courseName, String trainerName);

	@Query("from Trainer t inner join t.course cs where cs.courseName= ?1 and t.availability= ?2")
	List<Trainer> findByCourseNameAndAvailability(String courseName, PostAvailability availability);

	@Query("from Trainer t inner join t.course cs where cs.owner= ?1 and t.trainerName= ?2")
	List<Trainer> findByOwnerAndTrainerName(String courseOwner, String trainerName);

	@Query("from Trainer t inner join t.course cs where cs.startDate= ?1 and t.availability= ?2")
	List<Trainer> findByCourseStartDateAndAvailability(LocalDateTime CourseStartDate, PostAvailability availability);

	@Query("from Trainer t inner join t.course cs where cs.status= ?1 and t.trainerName= ?2")
	List<Trainer> findByCourseStatusAndTrainerName(PostStatus status, String trainerName);

	@Query("from Trainer t inner join t.course cs where cs.status= ?1 and t.trainerName= ?2")
	List<Trainer> findByCourseStatusAnd(PostStatus status, String trainerName);
	
	@Query("from Trainer t inner join t.course c where t.cour")
	Trainer findCourseTrainerDetails(int courseId);
	
	//assign
//	@Modifying
//	@Query("update Trainer t set t.course=?1 where t.trainerId=?2")
//	void assignTrainer(int courseId,int trainerId);
//
//	@Modifying
//	@Query("update Trainer t set t.course=?1 where t.trainerId=?2")
//	void deAssignTrainer(int courseId,int trainerId);
//	
	

}
